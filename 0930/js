let input = [3,
 [ 40, 80, 60]]

 let max = Math.max(...input[1])
input[1].forEach((x)=>{
    return x/max*100
})
console.log(input[1])
이렇게 하면 input[1]값이 안바뀌네


let a =input[1].forEach((x)=>{
이래도 안되네




let a = 'abcd'
for(let x of a){
  console.log(x)
}
for of로 문자 한하나 빼지고

let a = ['abcd']
이렇게 하면 abcd한번에 빠짐







let s = 'BANANA'
let answer = s 
s.replace(/A/g, '#')       s앞에 어디다 호출안하면 안바뀜
console.log(s)
'BANANA'

let s = 'BANANA'
let answer = s 
let a 
a =s.replace(/A/g, '#')     이렇게 어디다가 호출해줘야지 바뀜
console.log(s)
'B#N#N#'



let s = 'BANANA'
let answer=s;
s=s.replace(/A/g, "#");  
console.log(answer)    answer하면 바뀐 s가 나올거 같지만 원래 값 나온다. String 문자는 주소 참조가 아니라 값이 복사된다. 배열은 주소참조(slice?이용하면 값복사 가능하데)
'BANANA'




s=s.replace(/A/g, "#");  g쓰면 전역 전체다 찾아서고
s=s.replace(/A/, "#");  g안쓰면 첫번째것만 





A를 #으로
function solution(s){
    let answer="";
    for(let x of s){
        if(x=='A') answer+='#';
        else answer+=x;
    }
    return answer;
}

let str="BANANA";
console.log(solution(str));


    function solution(s){
        let answer=s;
        answer=answer.replace(/A/g, "#");
        return answer;
    }
    
    let str="BANANA";
    console.log(solution(str));





    문자찾기
    function solution(s, t){
        let answer=0;
        for(let x of s){
            if(x===t) answer++;
        }
        return answer;
    }
    
    let str="COMPUTERPROGRAMMING";
    console.log(solution(str, 'R'));



    function solution(s, t){
        let answer=s.split(t).length;
        return answer-1;
    }
    
    let str="COMPUTERPROGRAMMING";
    console.log(solution(str, 'R'));


    .split(t) 문자를 배열로, t를 잘라내고[opqrs, uvw] 
    만약 마지막에 t가있다면 빈문자열 생긴다 [opqrs, uvw,'']
    그래서 이렇게 길이 구할거면 -1을 해줘야함




    대문자 찾기
    function solution(s){         
        let answer=0;
        for(let x of s){
            //let num=x.charCodeAt();
            //if(num>=65 && num<=90) answer++;
            if(x===x.toUpperCase()) answer++; 
        }

        return answer;
    }

    let str="KoreaTimeGood";
    console.log(solution(str));

아스키코듸 대문자는 65~90
소문저 97~122






대문자로 통일
function solution(s){         
    let answer="";
    for(let x of s){
        let num=x.charCodeAt();
        if(num>=97 && num<=122) answer+=String.fromCharCode(num-32);
        else answer+=x;

        //if(x===x.toLowerCase()) answer+=x.toUpperCase();
        //else answer+=x;
    }

    return answer;

}

let str="ItisTimeToStudy";
console.log(solution(str));


x.toLowerCase는 x를 바꾸지는 않는다
대분자 아스키코드에서 -32빼면 소문자 아스키 코드다

String.fromCharCode(32) 하면 숫자를 영어문자로 바꿔준다




대소문자 변환
function solution(s){  
    let answer="";
    for(let x of s){
        if(x===x.toUpperCase()) answer+=x.toLowerCase();
        else answer+=x.toUpperCase();
    }
    return answer;
}

console.log(solution("StuDY"));




문자열모두 대문자로 바꾸고 싶으면 그냥
문자열.toUpperCase() 하면딤


let a = 'study'
let b =a.toUpperCase()
console.log(b)
이렇게 하면 a는 안바뀌는데 그이유는 아마도 ()이게 들어가면 함수라 return해 주기 때문이 아닐까




let a = ''
console.log(a.length)
빈문자열의 길이는 0이다




가장긴 문자열 
function solution(s){  
    let answer="", max=Number.MIN_SAFE_INTEGER;
    for(let x of s){
        if(x.length>max){
            max=x.length;
            answer=x;
        }
    }
    return answer;
}
let str=["teacher", "time", "student", "beautiful", "good"];
console.log(solution(str));




가운데 문자열 출력
function solution(s){  
    let answer;
    let mid=Math.floor(s.length/2)
    if(s.length%2===1) answer=s.substring(mid, mid+1);
    else answer=s.substring(mid-1, mid+1);
    //if(s.length%2===1) answer=s.substr(mid, 1);
    //else answer=s.substr(mid-1, 2);
    return answer;
}
console.log(solution("study"));

substring(2,3)
2번인덱스부터 3번인덱스 앞까지 호출

substr(2,3)
2번인덱스부터 3개를 뽑아내라



중복문자 제거
function solution(s){  
    let answer="";
    //console.log(s.indexOf("K"));
    for(let i=0; i<s.length; i++){
        //console.log(s[i], i, s.indexOf(s[i]));
        if(s.indexOf(s[i])===i) answer+=s[i];
    }
    return answer;
}
console.log(solution("ksekkset"));

문자열도 인덱스 번호를 갖는다
indexof()는 처음 만난 인덱스번호만 호출
indexof(1, 2)   2번쨰 인자는 2번인덱스 이후로 라는 뜻



인덱스 of를 이용한 문자가 몇개 인지 찾기
function solution(s){  
    let answer = 0
    let pos = s.indexOf('k')
    while(pos !==-1){
      answer++
      pos = s.indexOf('k', pos+1)
    }
    return answer;
  }
  console.log(solution("ksekkset"));



  중복단어 제거
  function solution(s){  
    let answer;
    //console.log(s.indexOf("time"));
    answer=s.filter(function(v, i){
        return s.indexOf(v)===i;
    });
    return answer;
}
let str=["good", "time", "good", "time", "student"];
console.log(solution(str));




큰수 출력
function solution(arr){         
    let answer=[];
    answer.push(arr[0]);
    for(let i=1; i<arr.length; i++){
        if(arr[i]>arr[i-1]) answer.push(arr[i]);
    }
    return answer;
}

let arr=[7, 3, 9, 5, 6, 12];
console.log(solution(arr));
