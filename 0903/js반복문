for문
 반복할때 사용
 횟수을 반복할때
 for (let i = 0; i<5; i++){ 반복조건
     console.log('안녕하세요'); 반복되는 코듭ㄹ러
 }
 for (초기화; 반복조건; 반복이 된후 실행되는코드){
   반복이 되는 코드블럭
 }
for (a; b; c){
  d
}
e
a d c b d c b e

a는 반복되는 코드 d 안에서만 유효
계속 변하기 때문에 const가 아니고 let
a에는 let i = 0, j = 1; 여러개 가능
for (let i = 0, j=2; i<5; i++, j=j*j){
  console.log('안녕하세요', i, j);
}

반복문을 즉시 종료하고 싶을때는 블럭안에서 break를 실행
for (let i =0; i<5; i++){
  console.log(i);
  if (i >2){
    break;
  }
  console.log('안녕하세요', i)
}

반복되는 블럭 안에서 continue;를 만나면 거기서 바로 해당 블럭은 종료하고
다음반복이 있으면 다음 반복으로 넘어간다
for (let i = 0; i<5; i++){
  console.log(i);
  if(i<2){
    continue;
  }
  console.log('안녕하세요', i)
}

for 무한루프 
조건을 안쓰고 무한으로 반복, 블럭안에 조건을써서 멈추게
for (;;){
  console.log('안녕하세요');
  if(Math.random() * 100>90){  램덤하게 어떤값이 넘으면 브래이크
    break;
  }
}
매번 끝나는게 틀림 랜덤이라

while(){
  
}
트루혹은 폴스()안에
while 무한루프
while (true){
  console.log('안녕하세요');
  if(Math.random() * 100>90){
    break;
  }
}
do while문
do{
  조건이 거짓이 될 때까지 반복
} while(조건);
조건을 먼저 판단하지 않고 실행한 다음에
while(조건)을 실행하고 다시 돈다
while문과 다른점은 와일은 조건을 먼저 판단해서 아예
실행이 안될수도 있는데 do while문은 한번은 실행
do while 무한
do{
  console.log('안녕하세요');
} while (Math.random() * 100 >90);

for off
iterable객체에 모두 사용. 이터러블은 2가지 종류
이터러블한 프로토콜을 자체적으로 내장하고 있는 객체들
배열같은것들. 폴 오프사용하면 요소가 하나하나 나오게 된다
for in
모든 프로퍼티. 객체에서도 사용가능
객체안에 있는 프로포티 하나하나르 포 인으로 돌릴수 있음


for(const i of [1, 2, 3]){    객체에 있는 하나하나 1, 2, 3하나 선택해서
  console.log(i);
}

포인에 단점중 한가지는 프로토타입안에 포로포티(text)를 설정해놓으면
Object.prototype.test = function(){};

for(const i in {a:1, b:2, c:3}){   이 객체에 a b c만 나올거 같지만, 프로토타입안에 있는 test도 함계나오게 되서 개발자가 의도한대로 안나올수 있어서 주의해야함
  console.log(i);
}
a 
b
c
test   이렇게 나옴.런타임 환경에 따라 다르게 나오는 경우도 있어서 조심해야함
