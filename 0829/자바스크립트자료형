자바스크립트 자료형 
자료형은 타입들

let whatever = 'Mark';   문자형

whatveer = 37;    숫자형

whatever = true     블린형

값에 따라 변수가 가지고 있는 탑입이 달라지는걸 동적 타입
자바스크립트는 변수가 가지는 고정타입이 없다

기본타입과 객체타입(objects)이 있다
Boolean
Null
Undefined
Number
String
Symbol 
6가지 기본 타입이 있따.

Boolean 2가지 true false
const isTrue = true;
const ifFalse= false;
console.log(typeof isTrue) 이렇게 어떤 타입이 사용되었는지 알수 있다.


Null     Undefined
널은 값이 없다. 비워있다
const a= null
console.log(a)


Undefine
let b;
console.log(b)
아무값도 가지고 있지않다 정해지지 않았따

if(a==b){
console.log(a==b);
하면 true나온다

if(a===b){
console.log(a===b);
하면 폴스 나온다. ===은 값까지 비교하는거고 이걸 쓰는 경우가 많음



Number
const c = NaN;
console.log(c, typeof c);  하면 NaN과 Number가 나옴

const d = Number('Mark');
console.log(d);      문자를 형변한 했을떼 안되면 NaN이 나옴 숫자가 아니라는 의미
const e = Number('37';
console.log(e)     하면 37 나온다. ' '은 문자형을 나타낸다. Number은 숫자형으로 바꺼줄때 사용





String
const a= 'Mark'      스트링은 문자형
""도 같은 문자형
const b= 'Mark'+'Lee';     문자형을 합칠수도 있음  Mark Lee이렇게 나옴
const c = b+ 'Lee';
console.log()   

탬플릿스트링 c가 너무 많으면 복잡하니 나온거
const d = `${a} Lee`;
console.log(d)
Mark Lee


심볼
const a = Symbol(); 이렇게 함수를 호출한 상태로 쓴다
const b = Symbol(37);    다양한 인자들을 넣을수 있다
const c = Symbol('Mark');
const d = Symbol('Mark');       고유한 값을 만들어 낼떄
c와 d는 다르다. 심볼의 중요한 점
console.log(c===d);   false뜬다

new Symbol(); 
생산자 함수로 사용할수 없다
