지금 이 상황은 링크처리하고 외부 css파일로 적고 있는거
css선택자(샐럭터)
type selecter 태그이름을 통해서 요소를 선택하는. 요소 선택자 유형선택자라고도 한다 트그셀랙터 타입셀랙터라고도 한다 
h2{      html파일에 있는 h2전부
    color: red;
}
css 상단부에 많이 적는다, 처음으로 적용되는 스타일이라 보기 좋게
특정요소보다 전체 적용할떄 사용
특정요소 선택할댸 많이 사용되는
id class 두가지
id 전역속성 글로벌(어트리뷰트) 모든 태그에 사용가능 
이름이라고 생각해라 
<h1 id="hi"></h1> 문서 전체에 id값은 하나
css에서는 
#hi{

}

class도 모든 태그 
증복 가능. class="red blue" 띄어쓰기를 이용하여 2개의 클래식 적용가능


attribute selector (속성 선택자, 특성선택자)
html 요소에 테그이름 외에 추가 정보를 적는게 어트리뷰트. 속성을 말함
<a href="" target=""></a> 속성을 가지고도 선택을 할수 있다 
a[target]{    a태그중에 target속성을 가진에들만 

}
a[href="~~~"]{    값까지 같은애들

}
input에 많이 씀

a[href^=""]{   ^캐럿을 쓰면 이걸로 시작하는 애들을 골ㄹ줘

}

a[href$=""]{     달러싸인을 쓰면 이걸로 끝나는 애들을 골라줘

}

a[href*=""]{     적어도 하. 처음이든 끝이든 중간이든. 문자열을 가지고 있는 이라는데. 특수문자도 되나>

}

pseudo-class selector
수도크래스 샐랙터(가상클래스 선택자, 의사클래스 선택자)
위의 샐럭터들보다 더 디테일하고 작은 범위
seletor: 조건{     현재상태일수도 있고 첫번쟤자식 마지막 자식일수도 있다

}

first-child
li:first-child{    li태그중에서 첫번쨰만. 자식이 아니라 형제중에

}
.class:first-child{   클래스도됨

}
주의 할점은 왜 차일드 자식이라 불리는가이다. 
<ul>
    <li></li>
    <li class="movie"></li>
    <li class="movie"></li>
</ul>
.movie:first-child{   이렇게 되면 당연히 2번쨰 li가 적용될거 같지만, ul안에서 부모안에서 첫번째다. 첫번째에 클래스ㄱ 없기때문에 아무도 적용안됨
li같은 요소를 기준을 해도 마찬가지다. li위에 형제요소에 div있다면, 거기에 li를 퍼스트차일드로하면 똑같이 아무 반응 없다

}

last-child도 first랑 같다

:nth-child(){ 1같은숫자만 들어가도 되고 2n처럼함수처럼가능. 2n-1도 가능, odd 홀수넘버도가능, even짝수넘버도 가능

}



:first-of-type{를 쓰면 first-child를 보완할수있따. 타입들중에 첫번째. 타입은 태그이름이라 생각하면됨
만약 클래스에 하게되면 타입기준이라 타입들중 첫번째 애들에 적용이 된다.  
}

last-of-type도 동일

:nth-of-type()도동일



:not 도 마찬가지로 범위ㅡㄹ 좁히는
<input type="text">
<input type="email">
<input class="pw" type="password">
<input type="submit">

input:not(.pw){   앞에거 전체중에 뒤어것만 제외한거.[type=password]도 가능. 야도""을 넣어야 할거가은데

}




html요소의 상태에 따라 스타일을 변경할수있는 동적가상클래스 선택자. 사용자의 동작에 따라서, 커서를 올라온다던가
link visited 하이퍼링크에 적용할수 있는
<a href=""></a>
방문한적이 있으때와 없을때 색이 다름. 기본값 파란색 그거 있자나
방문기록에 남게되는데 방문기록 삭제하면 원래대로 파란색 됨
방문전은 밑에 걸로 색 바꿀수 있음
a:link{
    color: pink:
}

a{   이렇게 하면 방문을 하던 안하던 똑같은 색깔
    color:pink;
}

visited는 반대



hover, active , focus
유저가 마우스를 올리거나 클릭한 대상들

input같은 경우는 타입에 따라서 생김새가 달라지기 떄문에 input[]어트리뷰트 셀럭터로 추가하면 좋다
input[type=button]:hover{
    
}


동작은 눌렀다가 땔때 발생한다
active는 눌렀다가 때기 전까지의 상태가 active다
:active{   a나 button에 많이 사용. lvha순서다. 뭔말이냐면. 덮어쓰기 떄문에 lvha순서대로 작성한는게 좋다

}


focus가 되었을때, 탭키를 사용하면 포커스가 된다 그때 바꿀댸
<input type="text"> 에도 마우스로 클릭해서 포커스가 될때도 사용


10부터
